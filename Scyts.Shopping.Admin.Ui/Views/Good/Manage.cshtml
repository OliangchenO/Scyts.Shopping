
@{
    ViewBag.Title = "Manage";
    Layout = "../Shared/_LayoutMain.cshtml";
}


<script>

    var datagrid = undefined;
    var editRow = undefined;

    var json_status = [{ "text": "停用", "value": "0" }, { "text": "启用", "value": "10" }];

    $(function () {
        init();
    });



    function init() {
        datagrid = $('.div_dataview').datagrid({
            nowrap: true,
            striped: true,
            pagination: true,
            collapsible: true,
            sortName: 'CreateDate',
            sortOrder: 'desc',

            remoteSort: true,
            idField: 'Good_Id',
            rownumbers: true,
            url: "/Good/Query",
            singleSelect: false,

            columns: [[
                    { field: 'Good_Id', checkbox: true },
                    { title: '商品名称', field: 'Name', width: 100, sortable: true, editor: { type: 'validatebox', options: { required: true } } },
                      { title: '商品编号', field: 'Sn', width: 100, sortable: true, editor: { type: 'validatebox', options: { required: true } } },
                      {
                          title: '品牌', field: 'Brand_Id', width: 100, sortable: true, formatter: formatter_brand, editor: { type: 'combobox', options: { data: json_brand, valueField: "Brand_Id", textField: "Name", editable: false } }
                      },
                      {
                          title: '产地', field: 'Country_Id', width: 100, sortable: true, formatter: formatter_country, editor: { type: 'combobox', options: { data: json_country, valueField: "Country_Id", textField: "Name", editable: false } }
                      },
                           {
                               title: '类型', field: 'Category_Id', width: 100, sortable: true, formatter: formatter_category, editor: { type: 'combotree', options: { data: json_category, editable: false } }
                           },
                               { title: '点击数', field: 'ClickCount', width: 50, sortable: true},
                                   { title: '关键词', field: 'KeyWord', width: 100, sortable: true, editor: { type: 'validatebox', options: { required: true } } },
                    {
                        title: '状态', field: 'Status', width: 60, sortable: true, formatter: formatter_status, editor: { type: 'combobox', options: { data: json_status, valueField: "value", textField: "text", editable: false } }
                    },
                    { title: '排序', field: 'Sort', width: 50, sortable: true,editor: { type: 'validatebox', options: { required: true }} },
                    {
                        title: '创建时间', field: 'CreateDate', width: 150, sortable: true,
                        formatter: function (value, row, index) {

                            if (value != null) {
                                var unixTimestamp = new Date(value);
                                return unixTimestamp.toLocaleString();
                            }
                        }
                    },
                     {
                         title: '更新时间', field: 'UpdateDate', width: 150, sortable: true,
                         formatter: function (value, row, index) {

                             if (value != null) {
                             var unixTimestamp = new Date(value);
                             return unixTimestamp.toLocaleString();
                             }
                         }
                     }

            ]],
            toolbar: [{
                text: '添加', iconCls: 'icon-add', handler: function () {//添加列表的操作按钮添加，修改，删除等
                    //添加时先判断是否有开启编辑的行，如果有则把开户编辑的那行结束编辑
                    if (editRow != undefined) {
                        datagrid.datagrid("endEdit", editRow);
                    }
                    //添加时如果没有正在编辑的行，则在datagrid的第一行插入一行
                    if (editRow == undefined) {
                        datagrid.datagrid("insertRow", {
                            index: 0, // index start with 0
                            row: {
                                Status: 0,
                                Sort:0
                            }
                        });
                        //将新插入的那一行开户编辑状态
                        datagrid.datagrid("beginEdit", 0);
                        //给当前编辑的行赋值
                        editRow = 0;
                    }

                }
            }, '-',
                {
                    text: '删除', iconCls: 'icon-remove', handler: function () {
                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        //删除时先获取选择行
                        var rows = datagrid.datagrid("getSelections");
                        //选择要删除的行
                        if (rows.length > 0) {
                            $.messager.confirm("提示", "你确定要删除吗?", function (r) {
                                if (r) {
                                    var ids = [];
                                    for (var i = 0; i < rows.length; i++) {
                                        ids.push(rows[i].Good_Id);
                                    }
                                    //将选择到的行存入数组并用,分隔转换成字符串，
                                    //本例只是前台操作没有与数据库进行交互所以此处只是弹出要传入后台的id
                                   // alert(ids.join(','));
                                    save_delete(ids);
                                    datagrid.datagrid('clearSelections');
                                }
                            });
                        }
                        else {
                            $.messager.alert("提示", "请选择要删除的行", "error");
                        }
                    }
                }, '-',
                {
                    text: '修改', iconCls: 'icon-edit', handler: function () {
                        //修改时要获取选择到的行
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //修改之前先关闭已经开启的编辑行，当调用endEdit该方法时会触发onAfterEdit事件
                            if (editRow != undefined) {
                                datagrid.datagrid("endEdit", editRow);
                            }
                            //当无编辑行时
                            if (editRow == undefined) {
                                //获取到当前选择行的下标
                                var index = datagrid.datagrid("getRowIndex", rows[0]);
                                //开启编辑
                                datagrid.datagrid("beginEdit", index);
                                //把当前开启编辑的行赋值给全局变量editRow
                                editRow = index;
                                //当开启了当前选择行的编辑状态之后，
                                //应该取消当前列表的所有选择行，要不然双击之后无法再选择其他行进行编辑
                                datagrid.datagrid("unselectAll");
                            }
                        }
                    }
                }, '-',
                {
                    text: '保存', iconCls: 'icon-save', handler: function () {
                        //保存时结束当前编辑的行，自动触发onAfterEdit事件如果要与后台交互可将数据通过Ajax提交后台
                        datagrid.datagrid("endEdit", editRow);
                    }
                }, '-',
                {
                    text: '取消编辑', iconCls: 'icon-redo', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if(   editRow != undefined){
                        editRow = undefined;
                        datagrid.datagrid("rejectChanges");
                        datagrid.datagrid("unselectAll");
                        }
                    }
                }, '-',
                {
                    text: '属性管理', iconCls: 'icon-tip', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //打开类型分配界面

                            var good_id = rows[0].Good_Id;
                            var href = "/Good_Attribute/Manage?id=" + good_id;
                            opendialog("属性管理",href, 1200, 500,false);

                        } else {
                            $.messager.alert("提示", "请指定一个商品", "info");
                        }

                    }
                }, '-',
                {
                    text: '文章管理', iconCls: 'icon-tip', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //打开类型分配界面

                            var good_id = rows[0].Good_Id;
                            var href = "/Good_Article/Manage?id=" + good_id;
                            opendialog("文章管理",href, 1200, 600, false);

                        } else {
                            $.messager.alert("提示", "请指定一个商品", "info");
                        }

                    }
                }, '-',
                {
                    text: '图片管理', iconCls: 'icon-tip', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //打开类型分配界面

                            var good_id = rows[0].Good_Id;
                            var href = "/Good_file/Manage?id=" + good_id;
                            opendialog("图片管理",href, 1200, 500, false);

                        } else {
                            $.messager.alert("提示", "请指定一个商品", "info");
                        }

                    }
                }, '-']
            ,
            onLoadSuccess: function (data) {
                editRow = undefined;
                // $('#DataList').datagrid("clearSelections");
            },
            onDblClickRow: function (rowIndex, rowData) {
                //双击开启编辑行
                if (editRow != undefined) {

                    datagrid.datagrid("endEdit", editRow);
                }
                if (editRow == undefined) {

                    datagrid.datagrid("beginEdit", rowIndex);
                    editRow = rowIndex;
                }
            },
            onAfterEdit: function (rowIndex, rowData, changes) {
                //endEdit该方法触发此事件
                //  console.info(rowData);
                save_edit(rowData, rowIndex);


            },
            onSelect: function (index,row) {
                return false;
            }


        });

    }

    function opendialog(title,href, width, height,fit) {
        $('.div_dialog').dialog({
            title: title,
         //   top: $(document).scrollTop() + ($(window).height() - 250) * 0.5,
            collapsible: true,
            minimizable: true,
            maximizable: true,
            resizable: true,
            width: width,
            height: height,
            fit:fit,
            modal: true,
            content: '<iframe scrolling="no"   frameborder="0"  src="' + href + '" style="width:100%;height:100%;"></iframe>'
        }).show();
    }


    function formatter_status(value, rowData, rowIndex) {

        for (var i = 0; i < json_status.length; i++) {
            if (json_status[i].value == value) {
                return json_status[i].text;
            }
        }
    }

    function formatter_brand(value, rowData, rowIndex) {

        for (var i = 0; i < json_brand.length; i++) {
            if (json_brand[i].Brand_Id == value) {
                return json_brand[i].Name;
            }
        }
    }


    function formatter_country(value, rowData, rowIndex) {

        for (var i = 0; i < json_country.length; i++) {
            if (json_country[i].Country_Id == value) {
                return json_country[i].Name;
            }
        }
    }

    function formatter_category(value, rowData, rowIndex) {

        for (var i = 0; i < json_category.length; i++) {
            if (json_category[i].id == value) {
                return json_category[i].text;
            } else {
                for (var j = 0; j < json_category[i].children.length; j++) {
                    if (json_category[i].children[j].id == value) {
                        return json_category[i].children[j].text;
                    }
                }
            }
        }
    }

    function save_edit(rowdata,rowIndex) {
        $.ajax({
            url: "/Good/Save",
            cache: false,
            type: "POST",
            dataType:"json",
            data: { model:rowdata},
            success: function (data) {

                if (data.Status == 0) {
                    $.messager.alert("提示", "保存成功", "info");


                    datagrid.datagrid("updateRow", {
                        index: rowIndex, // index start with 0
                        row: data.Obj
                    });
                }
                editRow = undefined;
            }
        });
    }

    function save_delete(ids) {

        $.ajax({
            url: "/Good/Delete",
            cache: false,
            type: "POST",
            dataType: "json",
            data: { ids: ids },
            success: function (data) {
                editRow = undefined;
                if (data.Status == 0) {
                    $.messager.alert("提示", "删除成功", "info");
                    datagrid.datagrid("reload");
                }
            }
        });

    }

    @Html.Raw(ViewData["data"].ToString())


</script>
  


    <div class="div_dataview"></div>
<div class="div_dialog"></div>