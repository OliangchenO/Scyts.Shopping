
@{
    ViewBag.Title = "Manage";
    Layout = "../Shared/_LayoutMain.cshtml";
}
<link href="~/Scripts/froala_editor/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<link href="~/Scripts/froala_editor/css/froala_editor.min.css" rel="stylesheet" type="text/css">
<script src="~/Scripts/easyui.extend.js"></script>
<script src="~/Scripts/froala_editor/js/froala_editor.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/tables.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/lists.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/colors.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/media_manager.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/font_family.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/font_size.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/block_styles.min.js"></script>
<script src="~/Scripts/froala_editor/js/plugins/video.min.js"></script>
<script src="~/Scripts/uploadify/jquery.uploadify.min.js"></script>
<link href="~/Scripts/uploadify/uploadify.css" rel="stylesheet" />
<script>

    var datagrid = undefined;
    var editRow = undefined;
    var weditor = null;
    var json_status = [{ "text": "停用", "value": "0" }, { "text": "启用", "value": "10" }];
    var json_type = [{ "text": "产品文章", "value": "0" }, { "text": "Banner图", "value": "10" }];
    $(function () {
        init();
    });
  
  

    function init() {
        $("#uploadify").uploadify({
            'swf': '/Scripts/uploadify/uploadify.swf',
            'uploader': '/File/Upload2',
            'cancelImg': '/Scripts/uploadify/uploadify-cancel.png',
            'folder': 'UploadFile',
            'preventCaching': true,
            'auto': true,
            'multi': false,

            onUploadSuccess: function (file, data, response) {
                var data = JSON.parse(data);
                if (data.isError == 0) {
                    $(nowUploadEditor).val(data.fileName);
                    $.messager.alert("提示", "上传成功", "info", function () {
                        $('.div_upload').dialog("close");
                    });

                } else {

                    $.messager.alert("提示", data.message, "error");
                }
                // $(obj).siblings().val();
                nowUploadEditor = null;
            }
        });

        var  title=$("")
        datagrid = $('.div_dataview').datagrid({
            nowrap: true,
            striped: true,
            pagination: true,
            collapsible: true,
            sortName: 'CreateDate',
            sortOrder: 'desc',
            
            remoteSort: true,
            idField: 'Article_Id',
            rownumbers: true,
            url: "/Article/Query",
            singleSelect: false,
     
            columns: [[
                    { field: 'Article_Id', checkbox: true },
                    {
                        title: '文章标题', field: 'Title', width: 200, sortable: true, editor: { type: 'validatebox', options: { required: true } }
                    },
                  
                     {
                         title: '文章类型', field: 'Type', width: 200, sortable: true, formatter: formatter_type, editor: { type: 'combobox', options: { data: json_type, valueField: "value", textField: "text", editable: false } }
                     },
                       { title: '文章图片', field: 'ImgUri', width: 100, sortable: true, formatter: formatter_img, editor: { type: 'uploadBtn' } },
                        {
                            title: '文章内容', field: 'Content', width: 200, sortable: true, formatter: formatter_content, editor: { type: 'ContentBtn' }
                        },
                    {
                        title: '状态', field: 'Status', width: 200, sortable: true, formatter: formatter_status, editor: { type: 'combobox', options: { data: json_status, valueField: "value", textField: "text", editable: false } }
                    },               
                    { title: '排序', field: 'Sort', width: 200, sortable: true,editor: { type: 'validatebox', options: { required: true }} },
                    {
                        title: '创建时间', field: 'CreateDate', width: 150, sortable: true,
                        formatter: function (value, row, index) {
                          
                            if (value != null) {
                                var unixTimestamp = new Date(value);
                                return unixTimestamp.toLocaleString();
                            }
                        }
                    },
                     {
                         title: '更新时间', field: 'UpdateDate', width: 150, sortable: true,
                         formatter: function (value, row, index) {
                          
                             if (value != null) {
                             var unixTimestamp = new Date(value);
                             return unixTimestamp.toLocaleString();
                             }
                         }
                     }

            ]],
            toolbar: [
               {
                   text: '查询', iconCls: 'icon-search', handler: function () {
                       datagrid.datagrid("reload");
                   }
               },
                {
                text: '添加', iconCls: 'icon-add', handler: function () {//添加列表的操作按钮添加，修改，删除等
                    //添加时先判断是否有开启编辑的行，如果有则把开户编辑的那行结束编辑
                    if (editRow != undefined) {
                        datagrid.datagrid("endEdit", editRow);
                    }
                    //添加时如果没有正在编辑的行，则在datagrid的第一行插入一行
                    if (editRow == undefined) {
                        datagrid.datagrid("insertRow", {
                            index: 0, // index start with 0
                            row: {
                                Type: 0,
                                Status: 0,
                                Sort:0
                            }
                        });
                        //将新插入的那一行开户编辑状态
                        datagrid.datagrid("beginEdit", 0);
                        //给当前编辑的行赋值
                        editRow = 0;
                    }

                }
            }, '-',
                {
                    text: '删除', iconCls: 'icon-remove', handler: function () {
                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        //删除时先获取选择行
                        var rows = datagrid.datagrid("getSelections");
                        //选择要删除的行
                        if (rows.length > 0) {
                            $.messager.confirm("提示", "你确定要删除吗?", function (r) {
                                if (r) {                             
                                    var ids = [];                               
                                    for (var i = 0; i < rows.length; i++) {
                                        ids.push(rows[i].Article_Id);
                                    }             
                                    //将选择到的行存入数组并用,分隔转换成字符串，
                                    //本例只是前台操作没有与数据库进行交互所以此处只是弹出要传入后台的id
                                   // alert(ids.join(','));
                                    save_delete(ids);
                                    datagrid.datagrid('clearSelections');
                                }
                            });
                        }
                        else {
                            $.messager.alert("提示", "请选择要删除的行", "error");
                        }
                    }
                }, '-',
                {
                    text: '修改', iconCls: 'icon-edit', handler: function () {
                        //修改时要获取选择到的行
                        var rows = datagrid.datagrid("getSelections");
                        //如果只选择了一行则可以进行修改，否则不操作
                        if (rows.length == 1) {
                            //修改之前先关闭已经开启的编辑行，当调用endEdit该方法时会触发onAfterEdit事件
                            if (editRow != undefined) {
                                datagrid.datagrid("endEdit", editRow);
                            }
                            //当无编辑行时
                            if (editRow == undefined) {
                                //获取到当前选择行的下标
                                var index = datagrid.datagrid("getRowIndex", rows[0]);
                                //开启编辑
                                datagrid.datagrid("beginEdit", index);
                                //把当前开启编辑的行赋值给全局变量editRow
                                editRow = index;
                                //当开启了当前选择行的编辑状态之后，
                                //应该取消当前列表的所有选择行，要不然双击之后无法再选择其他行进行编辑
                                datagrid.datagrid("unselectAll");
                            }
                        }
                    }
                }, '-',
                {
                    text: '保存', iconCls: 'icon-save', handler: function () {
                        //保存时结束当前编辑的行，自动触发onAfterEdit事件如果要与后台交互可将数据通过Ajax提交后台
                        datagrid.datagrid("endEdit", editRow);
                    }
                }, '-',
                {
                    text: '取消编辑', iconCls: 'icon-redo', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if(   editRow != undefined){
                        editRow = undefined;
                        datagrid.datagrid("rejectChanges");
                        datagrid.datagrid("unselectAll");
                        }
                    }
                }, '-']
            ,
            onLoadSuccess: function (data) {
                editRow = undefined;
                // $('#DataList').datagrid("clearSelections");
            },
            onDblClickRow: function (rowIndex, rowData) {
                //双击开启编辑行
                if (editRow != undefined) {
                  
                    datagrid.datagrid("endEdit", editRow);
                }
                if (editRow == undefined) {

                    datagrid.datagrid("beginEdit", rowIndex);
                    editRow = rowIndex;
                }
            },
            onAfterEdit: function (rowIndex, rowData, changes) {
                //endEdit该方法触发此事件
                //  console.info(rowData);
                save_edit(rowData, rowIndex);
              

            },
            onSelect: function (index,row) {
                return false;
            }

        });

    }

    function formatter_status(value, rowData, rowIndex) {
          
        for (var i = 0; i < json_status.length; i++) {    
            if (json_status[i].value == value) {
                return json_status[i].text;
            }
        }
    }
  
    function formatter_type(value, rowData, rowIndex) {

        for (var i = 0; i < json_type.length; i++) {
            if (json_type[i].value == value) {
                return json_type[i].text;
            }
        }
    }

    function formatter_content(value, rowData, rowIndex) {
        return "点击编辑";
    }


    function save_edit(rowdata,rowIndex) {
        $.ajax({
            url: "/Article/Save",
            cache: false,
            type: "POST",
            dataType:"json",
            data: { model:rowdata},
            success: function (data) {
                
                if (data.Status == 0) {
                    $.messager.alert("提示", "保存成功", "info");
                  

                    datagrid.datagrid("updateRow", {
                        index: rowIndex, // index start with 0
                        row: data.Obj
                    });
                }
                editRow = undefined;
            }
        });
    }

    function save_delete(ids) {
       
        $.ajax({
            url: "/Article/Delete",
            cache: false,
            type: "POST",
            dataType: "json",
            data: { ids: ids },
            success: function (data) {
                editRow = undefined;
                if (data.Status == 0) {
                    $.messager.alert("提示", "删除成功", "info");
                    datagrid.datagrid("reload");
                }
            }
        });

    }

    function uploadImg(obj) {
        nowUploadEditor = obj;
        $('.div_upload').dialog({
            title: '上传',
            top: $(document).scrollTop() + ($(window).height() - 250) * 0.5,
            collapsible: true,
            minimizable: true,
            maximizable: true,
            resizable: true,
            width: 400,
            height: 300,
            modal: true

        }).show();
    }


    function setcontent(obj) {
      
        $("#editor").editable("setHTML",$(obj).val());
        nowEditObj=obj;
    
        //展示
        $('.div_editor').dialog({
            title: '内容编辑',
            zIndex:100,
            top: $(document).scrollTop() + ($(window).height() - 500) * 0.5,
            collapsible: true,
            minimizable: true,
            maximizable: true,
            resizable: true,
            width: 1000,
            height: 500,
            modal:true,
         
            onBeforeOpen: function () {
               
            },
            onMove: function (left,top) {
                $(".window").css("z-index", "220");
                $(".window-shadow").css("z-index", "210");
                $(".window-mask").css("z-index", "200");
            }

        }).show();
        $(".window").css("z-index", "220");
        $(".window-shadow").css("z-index", "210");
        $(".window-mask").css("z-index", "200");
    }

    var nowEditObj=null;

    function finishcontent() {
        if (nowEditObj != null) {
            $(nowEditObj).val(editformat($("#editor").editable("getHTML")));
           
        }
        nowEditObj = null;
        $('.div_editor').dialog("close");
    }

    function editformat(value) {
  
       var  newvalue = value.replace(/\"/g, "'");
      
       return newvalue;
    }

    function closeEditor() {
        nowEditObj = null;
        $('.div_editor').dialog("close");
    }

    function formatter_img(value, rowData, rowIndex) {
        return "<img src='" + value + "' height='30' />";
    }
</script>



    <div class="div_dataview"></div>

    <div class="div_editor" style="display:none;">
        <a  class="easyui-linkbutton" data-options="iconCls:'icon-save'"  onclick="finishcontent()">确定</a> <a  class="easyui-linkbutton" data-options="iconCls:'icon-cancel'" onclick="closeEditor();">取消</a>
        <div id="editor" class="editor" style="height:300px;max-height:400px;"></div>
    </div>

<div class="div_upload" style="display:none;">
    <input type="file" id="uploadify" />
</div>
<script>
    $("#editor").editable({
        inlineMode: false,
        alwaysBlank: true,
        language: "zh_cn",
        imageUploadURL: '/File/Upload',//上传到本地服务器
        // imageUploadParams: { id: "edit" },
        height:300

    })

</script>
