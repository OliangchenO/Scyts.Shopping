
@{
    ViewBag.Title = "Manage";
    Layout = "../Shared/_LayoutMain.cshtml";
}

<script>

    var treegrid = undefined;
    var editRow = undefined;
   
    var json_status = [{ "text": "停用", "value": "0" }, { "text": "启用", "value": "10" }];

    $(function () {
        init();
    });
  
  

    function init() {
        treegrid = $('.div_dataview').treegrid({
         
            url: "/Category/Query",
         
            nowrap: true,
            striped: true,
         
            collapsible: true,
         
       
            idField: 'Country_Id',
            rownumbers: true,
   
            singleSelect: false,
            method: 'post',
            idField: 'id',
            treeField: 'Name',
            sortName: 'CreateDate',
            sortOrder: 'desc',
     
            remoteSort: true,
           // checkOnSelect: true,
            selectOnCheck: true,
         
            columns: [[
                    { field: 'id', checkbox: true },
                      { field: 'Name', title: '名称', width: 200, sortable: true, editor: { type: 'validatebox', options: { required: true } } },
                        { field: 'Description', title: '描述', width: 200, editor: { type: 'validatebox', options: { required: true } } },
                        { field: 'Keyword', title: '关键词', width: 200, sortable: true, editor: { type: 'validatebox', options: { required: false } } },
                         {
                             title: '状态', field: 'Status', width:100, sortable: true, formatter: formatter_status, editor: { type: 'combobox', options: { data: json_status, valueField: "value", textField: "text", editable: false } }
                         },
                          { title: '排序', field: 'Sort', width: 200, sortable: true, editor: { type: 'validatebox', options: { required: true } } },
                    {
                        title: '创建时间', field: 'CreateDate', width: 200, sortable: true,
                        formatter: function (value, row, index) {

                            if (value != null) {
                                var unixTimestamp = new Date(value);
                                return unixTimestamp.toLocaleString();
                            }
                        }
                    },
                     {
                         title: '更新时间', field: 'UpdateDate', width: 200, sortable: true,
                         formatter: function (value, row, index) {

                             if (value != null) {
                                 var unixTimestamp = new Date(value);
                                 return unixTimestamp.toLocaleString();
                             }
                         }
                     }
            ]],
            toolbar: [{
                id: 'btnSearch',
                text: '查询',
                iconCls: 'icon-search',
                handler: function () {
                    treegrid.treegrid("reload");
                }
            }, "-", {
                id: 'btnAddTotalBill',
                text: '添加类别',
                iconCls: 'icon-add',
                handler: function () {
                    if (editRow != undefined) {
                        treegrid.treegrid("endEdit", editRow.id);
                    }

                    //获取当前是否有选中的节点
                    var selRow = treegrid.treegrid("getSelected");
                    var parentid = 0;
                    if (selRow != null) {
                        parentid = selRow.id;
                    }
                    //添加时如果没有正在编辑的行，则在datagrid的第一行插入一行
                    if (editRow == undefined) {
                        treegrid.treegrid("append", {
                            parent: parentid, // index start with 0
                            data: [{
                                id:-1,
                              Name:"",
                             
                                Status: 0,
                                Sort: 0
                            }]
                        });
                        ////将新插入的那一行开户编辑状态
                       treegrid.treegrid("beginEdit", -1);
                        ////给当前编辑的行赋值
                       editRow = treegrid.treegrid("find", -1);
                    }
                }
            }

            , '-',
                {
                    text: '删除', iconCls: 'icon-remove', handler: function () {

                        if (editRow != undefined) {
                            $.messager.alert("提示", "请先完成编辑", "error");
                            return false;
                        }
                        //删除时先获取选择行
                        var rows = treegrid.treegrid("getSelections");
                        //选择要删除的行
                        if (rows.length > 0) {
                            $.messager.confirm("提示", "你确定要删除吗?", function (r) {
                                if (r) {
                                    var ids = [];
                                    for (var i = 0; i < rows.length; i++) {
                                        ids.push(rows[i].id);
                                    }
                                    //将选择到的行存入数组并用,分隔转换成字符串，
                                    //本例只是前台操作没有与数据库进行交互所以此处只是弹出要传入后台的id
                                   //  alert(ids.join(','));
                                    save_delete(ids);
                                     treegrid.treegrid('clearSelections');
                                }
                            });
                        }
                        else {
                            $.messager.alert("提示", "请选择要删除的行", "error");
                        }
                    }
                }, '-',

                {
                    text: '保存', iconCls: 'icon-save', handler: function () {
                        //保存时结束当前编辑的行，自动触发onAfterEdit事件如果要与后台交互可将数据通过Ajax提交后台
                     
                        treegrid.treegrid('endEdit', editRow.id);
                      
                      
                    }
                }
            , '-',
                {
                    text: '取消编辑', iconCls: 'icon-redo', handler: function () {
                        //取消当前编辑行把当前编辑行罢undefined回滚改变的数据,取消选择的行
                        if (editRow != undefined) {
                        
                            treegrid.treegrid("cancelEdit", editRow.id);
                            if (editRow.id == 0) {
                                treegrid.treegrid("remove", 0);
                            }
                            editRow = undefined;
                            treegrid.treegrid("unselectAll");
                        }
                    }
                }, '-']
            ,
                onDblClickRow: function (row) {
                    //双击开启编辑行
                    if (editRow != undefined) {     
                        treegrid.treegrid("endEdit", editRow.id);
                     }else{
                        treegrid.treegrid("beginEdit", row.id);
                        editRow = row;
                     }
                },
                onAfterEdit: function (row, changes) {
                //endEdit该方法触发此事件
                //  console.info(rowData);
                    save_edit(row);
                },
                onSelect: function (node) {
                 
                
                    if (node._parentId == 0||node._parentId==null) {
                        var childrenNode = treegrid.treegrid('getChildren', node.id);
                     
                        for (var i = 0; i < childrenNode.length; i++) {
                            treegrid.treegrid("select", childrenNode[i].id);
                        }
                    }
                },
                onUnselect: function (node) {
                    if (node._parentId == 0 || node._parentId == null) {

                        var childrenNode = treegrid.treegrid('getChildren', node.id);


                        for (var i = 0; i < childrenNode.length; i++) {

                            treegrid.treegrid("unselect", childrenNode[i].id)

                        }
                    }
                }
        });

    }

    function formatter_status(value, rowData, rowIndex) {

        for (var i = 0; i < json_status.length; i++) {
            if (json_status[i].value == value) {
                return json_status[i].text;
            }
        }
    }


    function save_edit(rowdata) {
        $.ajax({
            url: "/Category/Save",
            cache: false,
            type: "POST",
            dataType: "json",
            data: { model: rowdata },
            success: function (data) {
             
                if (data.Status == 0) {
                    $.messager.alert("提示", "保存成功", "info");
                 
            
                    treegrid.treegrid("update",
                        {
                            id: editRow.id,
                            row:data.Obj
                        }
                      
                    );
              
                }
                editRow = undefined;
            }
        });
    }



    function save_delete(ids) {

        $.ajax({
            url: "/Category/Delete",
            cache: false,
            type: "POST",
            dataType: "json",
            data: { ids: ids },
            success: function (data) {
                editRow = undefined;
                if (data.Status == 0) {
                    $.messager.alert("提示", "删除成功", "info");
                    treegrid.treegrid("reload");
                }
            }
        });

    }

</script>



<div class="div_dataview"></div>